---
name: Experimental docker build
on:
  workflow_call:
    inputs:
      image_name:
        type: string
        required: true
      runs_on:
        type: string
        default: ubuntu-latest

jobs:
  image:
    uses: sencrop/github-workflows/.github/workflows/docker-push-v3.yml@master
    secrets: inherit
    with:
      runs_on: ${{ inputs.runs_on }}
      cache_docker_layers: true
      image_name: ${{ inputs.image_name }}
      image_tag: x${{ github.run_id }}

  add-github-tag:
    needs: [image]
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: Add environment tag
        uses: sencrop/github-workflows/actions/add-git-tag@master
        with:
          tag: x${{ github.run_id }}

  comment:
    runs-on: ${{ inputs.runs_on }}
    needs: ["image"]
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: add PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const commentTitle = "Experimental docker build"
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes(commentTitle)
            })
            const output = `#### ${commentTitle}
              Build ID: x${{ github.run_id }}
              [Deploy this version](${{ github.server_url }}/${{ github.repository }}/actions/workflows/deploy.yml)
            `
            // Update a comment if it already exists
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }
