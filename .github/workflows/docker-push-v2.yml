name: Docker push

on:
  workflow_call:
    inputs:
      aws_region:
        type: string
        default: "eu-central-1"
      ci_iam_role:
        type: string
        default: ""
      docker_image_name:
        type: string
        required: true
      docker_image_tag:
        type: string
        required: true

jobs:
  push:
    runs-on: "ubuntu-latest"
    env:
      AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
      AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
      CI_IAM_ROLE: ${{ inputs.ci_iam_role }}
      DOCKER_IMAGE_NAME: ${{ inputs.docker_image_name }}
      DOCKER_IMAGE_TAG: ${{ inputs.docker_image_tag }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Compute IAM role
        id: ci_identity
        run: |
          if [[ -z "$CI_IAM_ROLE" ]]; then
            echo "iam_role=github-actions-$(echo "$GITHUB_REPOSITORY" | awk -F'/' '{print tolower($2)}')" >> ${GITHUB_OUTPUT}
          else
            echo "iam_role=$CI_IAM_ROLE" >> ${GITHUB_OUTPUT}
          fi

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          # AWS_ACCOUNT_ID is defined at the github organisation level
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ steps.ci_identity.outputs.iam_role }}

      - uses: jpribyl/action-docker-layer-caching@v0.1.1
        continue-on-error: true
        with:
          key: docker-layer-cache-${{ env.DOCKER_IMAGE_NAME }}-{hash}
          restore-keys: |
            docker-layer-cache-${{ env.DOCKER_IMAGE_NAME }}-

      - name: Build docker
        run: docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} .

      - name: Push to AWS ECR
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com
          docker push -a ${AWS_ACCOUNT_ID}.dkr.ecr.eu-central-1.amazonaws.com/${DOCKER_IMAGE_NAME}
