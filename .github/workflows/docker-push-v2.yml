---
name: Docker push

on:
  workflow_call:
    inputs:
      aws_region:
        type: string
        default: "eu-central-1"
      build_context:
        type: string
        default: "."
      cache_docker_layers:
        type: boolean
        default: false
      ci_iam_role:
        type: string
        default: ""
      docker_image_name:
        type: string
        required: true
      docker_image_tag:
        type: string
        required: true
      use_ssh:
        type: boolean
        default: false
    secrets:
      OLYMPE_4_DEMETER:
        required: false
      OLYMPE_4_SISYPHE:
        required: false
      SSH_PRIVATE_KEY:
        required: false

jobs:
  push:
    runs-on: "ubuntu-latest"
    env:
      AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
      AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
      CI_IAM_ROLE: ${{ inputs.ci_iam_role }}
      DOCKER_IMAGE_NAME: ${{ inputs.docker_image_name }}
      DOCKER_IMAGE_TAG: ${{ inputs.docker_image_tag }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Compute IAM role
        id: ci_identity
        run: |
          if [[ -z "$CI_IAM_ROLE" ]]; then
            echo "iam_role=github-actions-$(echo "$GITHUB_REPOSITORY" | awk -F'/' '{print $2}')" >> ${GITHUB_OUTPUT}
          else
            echo "iam_role=$CI_IAM_ROLE" >> ${GITHUB_OUTPUT}
          fi

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          # AWS_ACCOUNT_ID is defined at the github organisation level
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ steps.ci_identity.outputs.iam_role }}

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com

      - name: Start ssh agent
        if: ${{ inputs.use_ssh }}
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.OLYMPE_4_DEMETER || secrets.OLYMPE_4_SISYPHE || secrets.SSH_PRIVATE_KEY }}

      - name: Set ssh parameter
        id: set_ssh
        if: ${{ inputs.use_ssh }}
        run: |
          echo "ssh=main=$SSH_AUTH_SOCK" >> ${GITHUB_OUTPUT}

      - name: Build and push (with cache)
        if: ${{ inputs.cache_docker_layers }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          ssh: ${{ steps.set_ssh.outputs.ssh }}

      - name: Build and push (without cache)
        if: ${{ ! inputs.cache_docker_layers }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.build_context }}
          push: true
          tags: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
          ssh: ${{ steps.set_ssh.outputs.ssh }}
