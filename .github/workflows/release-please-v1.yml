---
name: Manage releases

on:
  workflow_call:
    inputs:
      create_pull_request:
        type: boolean
        default: true
        description: if true the workflow will create a release PR otherwise a github release is directly created
      runs_on:
        type: string
        default: ubuntu-latest

    outputs:
      prs_created:
        value: ${{ jobs.release-please.outputs.prs_created }}
      releases_created:
        value: ${{ jobs.release-please.outputs.releases_created }}
      pr:
        value: ${{ jobs.release-please.outputs.pr }}

jobs:
  release-please:
    runs-on: ${{ inputs.runs_on }}
    outputs:
      prs_created: ${{ steps.release_please.outputs.prs_created }}
      releases_created: ${{ steps.release_please.outputs.releases_created }}
      pr: ${{ steps.release_please.outputs.pr }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get app token
        id: app_token
        uses: sencrop/github-workflows/actions/authenticate-github-app@master
        with:
          credentials: ${{ secrets.SENCROP_BOT_CREDENTIALS_TOKEN }}

      - name: Run release-please
        if: inputs.create_pull_request
        id: release_please
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ steps.app_token.outputs.token }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Write .releaserc
        if: "! inputs.create_pull_request"
        run: |
          echo '{
            "plugins": [
              [
                "@semantic-release/commit-analyzer",
                {
                  "releaseRules": [
                    { "type": "feat", "release": "minor" },
                    { "type": "fix", "release": "patch" },
                    { "type": "refactor", "release": "patch" },
                    { "type": "chore", "release": "patch" },
                    { "type": "docs", "release": "patch" },
                    { "type": "deps", "release": "patch" },
                    { "type": "ci", "release": "patch" },
                    { "type": "perf", "release": "patch" },
                    { "type": "build", "release": "patch" },
                    { "type": "style", "release": "patch" },
                    { "type": "test", "release": "patch" }
                  ]
                }
              ],
              [
                "@semantic-release/release-notes-generator",
                {
                  "preset": "conventionalcommits",
                  "presetConfig": {
                    "types": [
                      { "type": "feat", "section": "New features", "hidden": false },
                      { "type": "fix", "section": "Bug fixes", "hidden": false },
                      { "type": "chore", "section": "Miscellaneous Chores", "hidden": false },
                      { "type": "refactor", "section": "Code refactoring", "hidden": false },
                      { "type": "docs", "section": "Documentation", "hidden": false },
                      { "type": "deps", "section": "Dependencies update", "hidden": false },
                      { "type": "ci", "section": "CI configuration", "hidden": false },
                      { "type": "perf", "section": "Performance improvements", "hidden": false },
                      { "type": "build", "section": "Build system", "hidden": false },
                      { "type": "style", "section": "Style improvements", "hidden": false },
                      { "type": "test", "section": "Test improvements", "hidden": false }

                    ]
                  }
                }
              ],
              "@semantic-release/github"
            ]
          }' > .releaserc

      - name: Create github release only
        if: "! inputs.create_pull_request"
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            conventional-changelog-conventionalcommits@6.0.0
        env:
          GITHUB_TOKEN: ${{ steps.app_token.outputs.token }}
